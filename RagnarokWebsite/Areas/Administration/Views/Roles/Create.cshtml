@model RagnarokWebsite.Models.RoleViewModel

@using RagnarokWebsite.Models
@using System.Linq

@{
    ViewBag.Title = "Ragnarok > Role Administration - Add New Role";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="row">
    <div class="col-12"><h1>Role Administration - Add New Role</h1></div>
</div>

@using (Html.BeginForm())
{
    <div class="row">
        @Html.AntiForgeryToken()

        <div class="col-12">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.RoleId)
        </div>
    </div>

    <div class="row">
        <div class="col-md-2 col-xs-12 pt-2">
            <span class="col-form-label">Name</span>
        </div>
        <div class="col-md-10 col-xs-12 pt-2">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="row">
        <div class="col-md-2 col-xs-12 pt-2">
            <span class="col-form-label">Description</span>
        </div>
        <div class="col-md-10 col-xs-12 pt-2">
            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="row">
        <div class="col-12">
            <h2>Permissions</h2>
            <ul class="treeview">
                @foreach (PermissionGroupViewModel pgvm in Model.Permissions.Where(p => p.ParentId == null).ToList())
                {
                    @PermissionGroupSection(pgvm)
                }
            </ul>
        </div>
    </div>

    <div class="row">
        <div class="col-12">
            <input type="submit" value="Add Role" class="btn btn-success centerButton" />
        </div>
    </div>
}

<div class="row">
    <div class="col-12 pb-2">
        @Html.ActionLink("Back to Roles", "Index")
    </div>
</div>

@helper PermissionGroupSection(PermissionGroupViewModel permissionGroup)
{
    <ul>
        <h3>@Html.DisplayFor(pg => permissionGroup.Name)</h3>
        @foreach (PermissionGroupViewModel pgvm in permissionGroup.PermissionGroups)
        {
            if ((CurrentUser.Name == "Admin" && pgvm.Name == "Framework Administration") || pgvm.Name != "Framework Administration")
            {
                @PermissionGroupSection(pgvm)
            }
        }
        @foreach (PermissionViewModel pvm in permissionGroup.Permissions)
        {
            @PermissionSection(pvm)
        }
    </ul>
}

@helper PermissionSection(PermissionViewModel pvm)
{
    <li>
        <div class="checkbox">
            @Html.Hidden("Permission[" + pvm.PermissionId + "].PermissionId", pvm.PermissionId)
            @Html.CheckBox("Permission[" + pvm.PermissionId + "].IsSelected", pvm.IsSelected)
            @Html.Label("Permission[" + pvm.PermissionId + "].IsSelected", pvm.Name)
        </div>
    </li>
}